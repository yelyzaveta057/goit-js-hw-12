{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '49711703-11461993d80a106b3cce7e78b';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport function searchImages(query) {\n  return axios\n    .get(BASE_URL, {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n        per_page: PER_PAGE,\n        page: page,\n      },\n    })\n    .then(response => response.data.hits)\n    .catch(error => {\n      console.error('Помилка під час запиту:', error.message); // Лише виводимо помилку в консоль\n      return [];\n    });\n}\nexport function resetPage() {\n  page = 1;\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n// Ініціалізація SimpleLightbox\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captions: true,\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\n// Функція для створення карток зображень\nexport function createImageMarkup(images) {\n  return images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => `\n      <li class=\"gallery-item\">\n        <a class=\"gallery-link\" href=\"${largeImageURL}\">\n          <img class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n        </a>\n        <div class=\"thumb-block\">\n          <div class=\"block\"><h2 class=\"tittle\">Likes</h2><p class=\"amount\">${likes}</p></div>\n          <div class=\"block\"><h2 class=\"tittle\">Views</h2><p class=\"amount\">${views}</p></div>\n          <div class=\"block\"><h2 class=\"tittle\">Comments</h2><p class=\"amount\">${comments}</p></div>\n          <div class=\"block\"><h2 class=\"tittle\">Downloads</h2><p class=\"amount\">${downloads}</p></div>\n        </div>\n      </li>`\n    )\n    .join('');\n}\n\n// Функція для оновлення галереї\nexport function updateGallery(images) {\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = createImageMarkup(images);\n  lightbox.refresh(); // Оновлюємо SimpleLightbox після додавання нових зображень\n}\n\n// Функція для показу повідомлення про помилку\nexport function showNoResultsMessage(message) {\n  iziToast.error({\n    title: 'Error',\n    message: message,\n    position: 'topRight',\n  });\n}\nexport function smoothScroll() {\n  const firstCard = document.querySelector('.gallery-item');\n\n  if (firstCard) {\n    const cardHeight = firstCard.getBoundingClientRect().height;\n\n    window.scrollBy({\n      top: cardHeight * 2,\n      left: 0,\n      behavior: 'smooth',\n    });\n  }\n}\n","import { searchImages, resetPage } from './js/pixabay-api.js';\nimport { updateGallery, showNoResultsMessage } from './js/render-functions.js';\nimport { smoothScroll } from './js/render-functions.js';\n\nconst form = document.querySelector('.form');\nconst input = document.querySelector('.input-search');\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\n\n// лоадер спочатку прихований\nloader.style.display = 'none';\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n  const query = input.value.trim();\n  if (query === '') {\n    showNoResultsMessage('Please enter a search query!');\n    return;\n  }\n\n  gallery.innerHTML = ''; // очищаємо галерею перед новим пошуком\n  loader.style.display = 'block'; // показуємо лоадер\n\n  searchImages(query)\n    .then(images => {\n      loader.style.display = 'none'; // ховаємо лоадер після отримання результатів\n      if (images.length === 0) {\n        showNoResultsMessage(\n          'Sorry, there are no images matching your search query. Please try again!'\n        );\n        return;\n      }\n      updateGallery(images);\n    })\n    .catch(error => {\n      loader.style.display = 'none';\n      showNoResultsMessage('Error fetching images. Please try again!');\n      console.error('Помилка сервера:', error.message);\n    });\n  form.reset();\n});\n"],"names":["API_KEY","BASE_URL","searchImages","query","axios","response","error","lightbox","SimpleLightbox","createImageMarkup","images","webformatURL","largeImageURL","tags","likes","views","comments","downloads","updateGallery","gallery","showNoResultsMessage","message","iziToast","form","input","loader","event"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,SAASC,EAAaC,EAAO,CAClC,OAAOC,EACJ,IAAIH,EAAU,CACb,OAAQ,CACN,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAU,SACV,IACD,CACP,CAAK,EACA,KAAKE,GAAYA,EAAS,KAAK,IAAI,EACnC,MAAMC,IACL,QAAQ,MAAM,0BAA2BA,EAAM,OAAO,EAC/C,GACR,CACL,CCjBA,MAAMC,EAAW,IAAIC,EAAe,aAAc,CAChD,SAAU,GACV,aAAc,MACd,aAAc,GAChB,CAAC,EAGM,SAASC,EAAkBC,EAAQ,CACxC,OAAOA,EACJ,IACC,CAAC,CACC,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IAAY;AAAA;AAAA,wCAE4BL,CAAa;AAAA,4CACTD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,8EAGQC,CAAK;AAAA,8EACLC,CAAK;AAAA,iFACFC,CAAQ;AAAA,kFACPC,CAAS;AAAA;AAAA,YAGtF,EACA,KAAK,EAAE,CACZ,CAGO,SAASC,EAAcR,EAAQ,CACpC,MAAMS,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAYV,EAAkBC,CAAM,EAC5CH,EAAS,QAAO,CAClB,CAGO,SAASa,EAAqBC,EAAS,CAC5CC,EAAS,MAAM,CACb,MAAO,QACP,QAASD,EACT,SAAU,UACd,CAAG,CACH,CClDA,MAAME,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAQ,SAAS,cAAc,eAAe,EAC9CL,EAAU,SAAS,cAAc,UAAU,EAC3CM,EAAS,SAAS,cAAc,SAAS,EAG/CA,EAAO,MAAM,QAAU,OACvBF,EAAK,iBAAiB,SAAU,SAAUG,EAAO,CAC/CA,EAAM,eAAc,EACpB,MAAMvB,EAAQqB,EAAM,MAAM,KAAI,EAC9B,GAAIrB,IAAU,GAAI,CAChBiB,EAAqB,8BAA8B,EACnD,MACD,CAEDD,EAAQ,UAAY,GACpBM,EAAO,MAAM,QAAU,QAEvBvB,EAAaC,CAAK,EACf,KAAKO,GAAU,CAEd,GADAe,EAAO,MAAM,QAAU,OACnBf,EAAO,SAAW,EAAG,CACvBU,EACE,0EACV,EACQ,MACD,CACDF,EAAcR,CAAM,CAC1B,CAAK,EACA,MAAMJ,GAAS,CACdmB,EAAO,MAAM,QAAU,OACvBL,EAAqB,0CAA0C,EAC/D,QAAQ,MAAM,mBAAoBd,EAAM,OAAO,CACrD,CAAK,EACHiB,EAAK,MAAK,CACZ,CAAC"}